{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Guest API",
    "description": "CRUD API for managing Guest entity"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/guests": {
      "get": {
        "summary": "Get all guests",
        "description": "Retrieve a list of all guests.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of guests.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Guest"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new guest",
        "description": "Create a new guest entry.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Guest object to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Guest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Guest created successfully.",
            "schema": {
              "$ref": "#/definitions/Guest"
            }
          }
        }
      }
    },
    "/guests/{id}": {
      "get": {
        "summary": "Get a guest by ID",
        "description": "Retrieve a guest by their ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A single guest object.",
            "schema": {
              "$ref": "#/definitions/Guest"
            }
          },
          "404": {
            "description": "Guest not found."
          }
        }
      },
      "put": {
        "summary": "Update a guest by ID",
        "description": "Update details of a guest by their ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Guest object with updated data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Guest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Guest updated successfully."
          },
          "404": {
            "description": "Guest not found."
          }
        }
      },
      "delete": {
        "summary": "Delete a guest by ID",
        "description": "Delete a guest by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Guest deleted successfully."
          },
          "404": {
            "description": "Guest not found."
          }
        }
      }
    }
  },
  "definitions": {
    "Guest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "arriveDate": {
          "type": "string",
          "format": "date",
          "example": "2024-01-01"
        },
        "departDate": {
          "type": "string",
          "format": "date",
          "example": "2024-01-10"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2024-01-01T10:00:00Z"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2024-01-02T12:00:00Z"
        }
      }
    }
  }
}